{
	"info": {
		"_postman_id": "eb75e785-2e3d-431c-8eee-0f80e7b3925f",
		"name": "batch24",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43980798"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var storeResponse = pm.response.json()\r",
							"pm.environment.set(\"Id\",storeResponse.bookingid)\r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"console.log(firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"console.log(lastName)\r",
							"var totalprice= pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\",totalprice)\r",
							"var depositPaid= pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"const date= require('moment')\r",
							"const today = date()\r",
							"//var checkInPast= today.subtract(5,'d').format('YYYY-MM-DD')\r",
							"var checkIn= today.add(5,'d').format('YYYY-MM-DD')\r",
							"//console.log(checkInPast)\r",
							"pm.environment.set(\"checkIn\",checkIn)\r",
							"var checkOut= today.add(3,'d').format('YYYY-MM-DD')\r",
							"pm.environment.set(\"checkOut\",checkOut)\r",
							"var additionalNeeds = pm.variables.replaceIn(\"Breakfast\")\r",
							"pm.environment.set(\"additionalNeeds\",additionalNeeds)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkIn}}\",\r\n    \t\"checkout\" : \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var storeResponse = pm.response.json()\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"firstName\")).to.eql(storeResponse.firstname)\r",
							"\r",
							" })\r",
							" pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"lastName\")).to.eql(storeResponse.lastname)\r",
							"\r",
							" })\r",
							" pm.test(\"Total price Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"totalPrice\")).to.eql(storeResponse.totalprice.toString())\r",
							"\r",
							" })\r",
							" pm.test(\"Deposit Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"depositPaid\")).to.eql(storeResponse.depositpaid.toString())\r",
							"\r",
							" })\r",
							" pm.test(\"CheckIn date Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"{{checkIn}}\")).to.eql(storeResponse.checkin)\r",
							"\r",
							" })\r",
							" pm.test(\"CheckOut date Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"{{checkOut}}\")).to.eql(storeResponse.checout)\r",
							"\r",
							" })\r",
							" pm.test(\"Additional Needs Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"additionalNeeds\")).to.eql(storeResponse.additionalneeds)\r",
							"\r",
							" })\r",
							"\r",
							" pm.test(\"Status Code is 200\",()=>\r",
							" {\r",
							"    pm.response.to.have.status(200);\r",
							" }\r",
							" );\r",
							" \r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"Sally\",\r\n\t\"lastname\": \"Brown\",\r\n\t\"totalprice\": 111,\r\n\t\"depositpaid\": true,\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"2013-02-23\",\r\n    \t\"checkout\": \"2014-10-23\"\r\n\t},\r\n\t\"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{Id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var storeResponse = pm.response.json()\r",
							"pm.environment.set(\"token\", storeResponse.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/auth",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"James\",\r\n\t\"lastname\" : \"Brown\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{Id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/booking/{{Id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		}
	]
}